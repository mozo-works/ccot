a:14:{s:7:"attribs";a:4:{s:5:"xmlns";s:36:"http://pear.php.net/dtd/rest.release";s:9:"xmlns:xsi";s:41:"http://www.w3.org/2001/XMLSchema-instance";s:11:"xmlns:xlink";s:28:"http://www.w3.org/1999/xlink";s:18:"xsi:schemaLocation";s:81:"http://pear.php.net/dtd/rest.release     http://pear.php.net/dtd/rest.release.xsd";}s:1:"p";a:2:{s:7:"attribs";a:1:{s:10:"xlink:href";s:33:"/rest/p/db_dataobject_formbuilder";}s:8:"_content";s:25:"DB_DataObject_FormBuilder";}s:1:"c";s:12:"pear.php.net";s:1:"v";s:8:"1.0.0RC5";s:2:"st";s:4:"beta";s:1:"l";s:11:"PHP License";s:1:"m";s:12:"justinpatrin";s:1:"s";s:86:"Class to automatically build HTML_QuickForm objects from a DB_DataObject-derived class";s:1:"d";s:1108:"DB_DataObject_FormBuilder will aid you in rapid application development using the packages DB_DataObject and HTML_QuickForm. For having a quick but working prototype of your application, simply model the database, run DataObject's createTable script over it and write a script that passes one of the resulting objects to the FormBuilder class. The FormBuilder will automatically generate a simple but working HTML_QuickForm object that you can use to test your application. It also provides a processing method that will automatically detect if an insert() or update() command has to be executed after the form has been submitted. If you have set up DataObject's links.ini file correctly, it will also automatically detect if a table field is a foreign key and will populate a selectbox with the linked table's entries. There are many optional parameters that you can place in your DataObjects.ini or in the properties of your derived classes, that you can use to fine-tune the form-generation, gradually turning the prototypes into fully-featured forms, and you can take control at any stage of the process.";s:2:"da";s:19:"2006-09-17 03:42:53";s:1:"n";s:1041:"* BC Break!
** useMutators must now be set for setters to be used (this gets around problems with overloading)
** useAccessors will now cause getters to be used to get non-link data
*** accessors and mutators may not be used for link fields

* Form values changed in preProcessFormCallback are now honored
* De-silenced include_once (fopen now used to check for file readability)
* _getEnumOptions() now works with MDB2
* Boolean fields which are set editable but are not set as DB_DATAOBJECT_BOOL will now be set correctly
* Fixed displaying of postgresql booleans
* _sanitizeFieldName is now used when listing special elements (fixes some cross/triple/reverse link bugs)
* Added more info to error output
* Extended FormBuilder classes will now be re-used for sub-FormBuilders
* Added an option to set the empty label for radios which is distinct from the select empty label (Request #7919)
* Header elements now have a name
* Fixed some docs
* Fixed an undefined reference
* SubForm.php now outputs a type attribute in all <script> output";s:1:"f";s:5:"62721";s:1:"g";s:58:"http://pear.php.net/get/DB_DataObject_FormBuilder-1.0.0RC5";s:1:"x";a:1:{s:7:"attribs";a:1:{s:10:"xlink:href";s:20:"package.1.0.0RC5.xml";}}}