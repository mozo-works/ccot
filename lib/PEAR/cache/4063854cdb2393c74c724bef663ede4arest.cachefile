a:14:{s:7:"attribs";a:4:{s:5:"xmlns";s:36:"http://pear.php.net/dtd/rest.release";s:9:"xmlns:xsi";s:41:"http://www.w3.org/2001/XMLSchema-instance";s:11:"xmlns:xlink";s:28:"http://www.w3.org/1999/xlink";s:18:"xsi:schemaLocation";s:81:"http://pear.php.net/dtd/rest.release     http://pear.php.net/dtd/rest.release.xsd";}s:1:"p";a:2:{s:7:"attribs";a:1:{s:10:"xlink:href";s:33:"/rest/p/db_dataobject_formbuilder";}s:8:"_content";s:25:"DB_DataObject_FormBuilder";}s:1:"c";s:12:"pear.php.net";s:1:"v";s:6:"0.18.0";s:2:"st";s:4:"beta";s:1:"l";s:11:"PHP License";s:1:"m";s:12:"justinpatrin";s:1:"s";s:86:"Class to automatically build HTML_QuickForm objects from a DB_DataObject-derived class";s:1:"d";s:1108:"DB_DataObject_FormBuilder will aid you in rapid application development using the packages DB_DataObject and HTML_QuickForm. For having a quick but working prototype of your application, simply model the database, run DataObject's createTable script over it and write a script that passes one of the resulting objects to the FormBuilder class. The FormBuilder will automatically generate a simple but working HTML_QuickForm object that you can use to test your application. It also provides a processing method that will automatically detect if an insert() or update() command has to be executed after the form has been submitted. If you have set up DataObject's links.ini file correctly, it will also automatically detect if a table field is a foreign key and will populate a selectbox with the linked table's entries. There are many optional parameters that you can place in your DataObjects.ini or in the properties of your derived classes, that you can use to fine-tune the form-generation, gradually turning the prototypes into fully-featured forms, and you can take control at any stage of the process.";s:2:"da";s:19:"2005-08-22 18:26:15";s:1:"n";s:1033:"* Fixed notice about $className in FormBuilder.php
* Fig bug #4867 - enumOptions renumbered for NULL fields
* Fixed bug where _array2Date added AM/PM to dates
* Fixed bug where some callbacks set in PEAR::setStaticProperty or passed into the constructor would get overwritten with defaults
* Fixed bug #5127 - cross/triple/reverseLinks don't work with pgsql
* Fixed bug #4562 - date elements need to use addGroupRule

* Altered create() to allow for any main class to be used
* Altered create() to allow for inclusion of driver classes outside FormBuilder
* The prepareLinkedDataObject callback may now affect displayFields and other link options
* Added date/time option callback properties
* Altered the default field labels to be much more useful

* Changed SubForm elements to always use the default QuickForm renderer (used by linkNewValue)
* Changed dataFromDatabaseCallback and dateToDatabaseCallback to allow for disabling of them
** This is a slight BC break as a non-callable value was previously replaced with the defaults";s:1:"f";s:5:"58161";s:1:"g";s:56:"http://pear.php.net/get/DB_DataObject_FormBuilder-0.18.0";s:1:"x";a:1:{s:7:"attribs";a:1:{s:10:"xlink:href";s:18:"package.0.18.0.xml";}}}